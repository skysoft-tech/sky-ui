@use 'sass:string';
@use 'projects/core/src/lib/theming' as theming;

$mapping: (
  input-border-width: misc-border-width-1,
  input-border-radius: misc-border-radius-3,
  input-border-color: color-borders,
  input-background-color: color-background-accent,

  input-focused-border-color: color-primary,
  input-error-border-color: color-warning,
  input-error-hint-color: color-warning,

  input-font-family: text-main-font,
  input-background-disabled: color-background-disabled,
  input-border-disabled: color-borders-disabled,
  input-color-text-disabled: color-foreground-disabled,
);

@mixin apply-theme($theme-input) {
  $theme: theming.apply-mapping($theme-input, $mapping);

  .sky-primitive-input {
    .sky-field-wrapper {
      &:has(.sky-input-wrapper input[disabled]) {
        color: theming.get($theme, input-color-text-disabled);
      }
    }

    .sky-input-wrapper {
      border-style: solid;
      border-width: theming.get($theme, input-border-width);
      border-radius: theming.get($theme, input-border-radius);
      border-color: theming.get($theme, input-border-color);

      font-family: string.unquote(theming.get($theme, input-font-family));

      background: theming.get($theme, input-background-color);

      &:has(input:focus) {
        border-color: theming.get($theme, input-focused-border-color);
      }

      &:has(input[disabled]) {
        border-color: theming.get($theme, input-border-disabled);
        background: theming.get($theme, input-background-disabled);
        color: theming.get($theme, input-color-text-disabled);
      }

      .cleaner {
        &:focus {
          border-color: theming.get($theme, input-focused-border-color);
        }
      }
    }
  }
}
